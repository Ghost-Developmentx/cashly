<!-- app/views/ledger_accounts/_form.html.erb -->
<%= form_with(model: ledger_account, local: true) do |form| %>
  <% if ledger_account.errors.any? %>
    <div class="mb-6 bg-red-50 border-l-4 border-red-500 p-4 rounded">
      <h4 class="text-lg font-medium mb-2 text-red-800"><%= pluralize(ledger_account.errors.count, "error") %> prohibited this account from being saved:</h4>
      <ul class="list-disc pl-5 text-red-700">
        <% ledger_account.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
    <div>
      <%= form.label :code, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.text_field :code, class: "block w-full h-10 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm", placeholder: "e.g. 1000, 5110" %>
      <p class="mt-1 text-sm text-gray-500">Account code should follow the standard numbering system</p>
    </div>

    <div>
      <%= form.label :name, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.text_field :name, class: "block w-full h-10 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm", placeholder: "e.g. Cash, Accounts Receivable" %>
    </div>
  </div>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
    <div>
      <%= form.label :account_type, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.select :account_type,
                      LedgerAccount.account_types.map { |type| [type.titleize, type] },
                      {},
                      class: "block w-full h-10 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm" %>
    </div>

    <div>
      <%= form.label :account_subtype, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.select :account_subtype,
                      LedgerAccount.default_account_subtypes[ledger_account.account_type || 'expense'].map { |subtype| [subtype.titleize, subtype] },
                      { include_blank: "None" },
                      class: "block w-full h-10 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm" %>
    </div>
  </div>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
    <div>
      <%= form.label :parent_account_id, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.collection_select :parent_account_id,
                                 LedgerAccount.where(account_type: ledger_account.account_type || 'expense'),
                                 :id,
                                 :full_name,
                                 { include_blank: "No parent account" },
                                 class: "block w-full h-10 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm" %>
    </div>

    <div>
      <%= form.label :default_balance, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.select :default_balance,
                      [%w[Debit debit], %w[Credit credit]],
                      {},
                      class: "block w-full h-10 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm" %>
      <p class="mt-1 text-sm text-gray-500">Normal balance direction for increases</p>
    </div>
  </div>

  <div class="mb-6">
    <%= form.label :description, class: "block text-sm font-medium text-gray-700 mb-1" %>
    <%= form.text_area :description, rows: 3, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm", placeholder: "Optional description of the account purpose" %>
  </div>

  <div class="mb-6">
    <div class="flex items-start">
      <div class="flex items-center h-5">
        <%= form.check_box :active, class: "focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded" %>
      </div>
      <div class="ml-3 text-sm">
        <%= form.label :active, class: "font-medium text-gray-700" %>
        <p class="text-gray-500">Active accounts can be used in transactions</p>
      </div>
    </div>
  </div>

  <div class="flex space-x-3">
    <%= form.submit class: "px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" %>
    <%= link_to "Cancel", ledger_account.persisted? ? ledger_account_path(ledger_account) : ledger_accounts_path, class: "px-4 py-2 bg-white border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500" %>
  </div>
<% end %>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Get the account type and subtype select elements
        const accountTypeSelect = document.getElementById('ledger_account_account_type');
        const accountSubtypeSelect = document.getElementById('ledger_account_account_subtype');
        const parentAccountSelect = document.getElementById('ledger_account_parent_account_id');
        const defaultBalanceSelect = document.getElementById('ledger_account_default_balance');

        // Define the subtypes for each account type
        const subtypes = <%= raw LedgerAccount.default_account_subtypes.to_json %>;

        // Define the default balance for each account type
        const defaultBalances = {
            'asset': 'debit',
            'liability': 'credit',
            'equity': 'credit',
            'revenue': 'credit',
            'expense': 'debit'
        };

        // Update subtypes and default balance when the account type changes
        if (accountTypeSelect && accountSubtypeSelect && defaultBalanceSelect) {
            accountTypeSelect.addEventListener('change', function() {
                const selectedType = this.value;

                // Update the subtypes dropdown
                accountSubtypeSelect.innerHTML = '<option value="">None</option>';
                if (subtypes[selectedType]) {
                    subtypes[selectedType].forEach(function(subtype) {
                        const option = document.createElement('option');
                        option.value = subtype;
                        option.textContent = subtype.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase());
                        accountSubtypeSelect.appendChild(option);
                    });
                }

                // Update the default balance
                if (defaultBalances[selectedType]) {
                    defaultBalanceSelect.value = defaultBalances[selectedType];
                }

                // Update the parent account dropdown to only show accounts of the same type
                if (parentAccountSelect) {
                    // This would ideally be an AJAX call to fetch accounts of the selected type
                    // For simplicity, we'll just hide options of different types
                    Array.from(parentAccountSelect.options).forEach(function(option) {
                        if (option.value) {
                            // This is a simplified approach - in a real app, you'd make an AJAX call
                            // to get the accounts of the selected type
                            const optionText = option.text.toLowerCase();
                            const hideOption = !optionText.includes(selectedType);

                            if (hideOption) {
                                option.style.display = 'none';
                            } else {
                                option.style.display = '';
                            }
                        }
                    });

                    // Reset the selection if the current selection is now hidden
                    if (parentAccountSelect.selectedOptions[0] &&
                        parentAccountSelect.selectedOptions[0].style.display === 'none') {
                        parentAccountSelect.selectedIndex = 0;
                    }
                }
            });
        }
    });
</script>